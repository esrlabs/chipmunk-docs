<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://esrlabs.github.io/chipmunk-docs/https://esrlabs.github.io/chipmunk-docs/feed.xml" rel="self" type="application/atom+xml" /><link href="https://esrlabs.github.io/chipmunk-docs/https://esrlabs.github.io/chipmunk-docs/" rel="alternate" type="text/html" /><updated>2025-02-24T09:53:19+00:00</updated><id>https://esrlabs.github.io/chipmunk-docs/https://esrlabs.github.io/chipmunk-docs/feed.xml</id><title type="html">Chipmunk Site</title><subtitle>Page with information on chipmunk</subtitle><author><name>{&quot;name&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil}</name></author><entry><title type="html">Charts now with scales</title><link href="https://esrlabs.github.io/chipmunk-docs/https://esrlabs.github.io/chipmunk-docs/charts/logs/2020/04/13/charts-with-scales/" rel="alternate" type="text/html" title="Charts now with scales" /><published>2020-04-13T00:00:00+00:00</published><updated>2020-04-13T00:00:00+00:00</updated><id>https://esrlabs.github.io/chipmunk-docs/https://esrlabs.github.io/chipmunk-docs/charts/logs/2020/04/13/charts-with-scales</id><content type="html" xml:base="https://esrlabs.github.io/chipmunk-docs/https://esrlabs.github.io/chipmunk-docs/charts/logs/2020/04/13/charts-with-scales/">&lt;p&gt;Charts were the first graphical feature we introduced in chipmunk. Using them will allow you to get a quick overview of the data you need to analyze.&lt;/p&gt;

&lt;h2 id=&quot;data-with-a-chart&quot;&gt;Data with a chart&lt;/h2&gt;
&lt;p&gt;In an example we used chipmunks command-plugin to repeatedly execute the &lt;code class=&quot;highlighter-rouge&quot;&gt;top&lt;/code&gt; command:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;top &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; 5 | rg &lt;span class=&quot;s2&quot;&gt;&quot;Load|CPU&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;usage|Networks|Disks&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We applied a chart-search-expression to the data, once to extract the CPU usage and once to extract the Load average.
&lt;img src=&quot;https://esrlabs.github.io/chipmunk-docs/images/charts_without_scale.png&quot; alt=&quot;Performance&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;details-for-individual-charts&quot;&gt;Details for individual charts&lt;/h2&gt;

&lt;p&gt;While we think this is already immensely powerful, the charts feature gained a very important detail with the latest release: charts can now show you the scale of the data they depict, depending on which of the graphs is selected.
In the images below, we respectively selected the green and the pink graph.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://esrlabs.github.io/chipmunk-docs/images/chart_with_green_scale.png&quot; alt=&quot;Performance&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It’s now easy to see at a glance that the load was always between 1 and 2 percent.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://esrlabs.github.io/chipmunk-docs/images/chart_with_red_scale.png&quot; alt=&quot;Performance&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The CPU usage was between 0 and 30 percent.&lt;/p&gt;

&lt;p&gt;We hope that this little detail will make charts even more useful to you.&lt;/p&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil}</name></author><summary type="html">Charts were the first graphical feature we introduced in chipmunk. Using them will allow you to get a quick overview of the data you need to analyze.</summary></entry><entry><title type="html">Dealing with huge files</title><link href="https://esrlabs.github.io/chipmunk-docs/https://esrlabs.github.io/chipmunk-docs/tech/performance/2020/01/21/dealing-with-huge-files/" rel="alternate" type="text/html" title="Dealing with huge files" /><published>2020-01-21T00:00:00+00:00</published><updated>2020-01-21T00:00:00+00:00</updated><id>https://esrlabs.github.io/chipmunk-docs/https://esrlabs.github.io/chipmunk-docs/tech/performance/2020/01/21/dealing-with-huge-files</id><content type="html" xml:base="https://esrlabs.github.io/chipmunk-docs/https://esrlabs.github.io/chipmunk-docs/tech/performance/2020/01/21/dealing-with-huge-files/">&lt;p&gt;With well-performing desktop and notebook computers, it should no longer be an issue to quickly work with large log files. But unfortunately, this is not as straight forward as you might think. Especially when working with windows, the out-of-the-box tools just do not cut it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://esrlabs.github.io/chipmunk-docs/images/notepad_indexing.png&quot; alt=&quot;Notepad&quot; title=&quot;Notepad&quot; style=&quot;width: 50%; display:block; margin-left:auto; margin-right:auto;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A developer or sysadmin should not have to worry about the incapabilities of the tools but the content of the log file.&lt;/p&gt;

&lt;h2 id=&quot;large-is-not-huge&quot;&gt;Large is not Huge&lt;/h2&gt;

&lt;p&gt;Of course, there are solutions available, even though you need to search for them. But things often go south when files get too large. But what should we consider too large? I’d say as long as your system can deal with a huge file on disk, all functionality of a good log viewing tool should be available with a minimum performance impact.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://esrlabs.github.io/chipmunk-docs/images/iceberg.jpg&quot; alt=&quot;Notepad&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s say you have a 10 GByte log file. You should not have to wait when opening it and you should have excellent performance when executing search requests for the whole document.&lt;/p&gt;

&lt;h2 id=&quot;why-are-we-so-fast&quot;&gt;Why are we so fast?&lt;/h2&gt;

&lt;p&gt;All performance intense operations in chipmunk are implemented in Rust and great care was taken to make them efficient. Data is processed lazily and thus even the biggest files can be processed quickly. For searching, we rely on the brilliant &lt;a href=&quot;https://github.com/BurntSushi/ripgrep&quot;&gt;ripgrep tool&lt;/a&gt; which is the fastest search tool around to our knowledge.&lt;/p&gt;

&lt;p&gt;Here is an unscientific benchmark for dealing with a 1.7GByte file. We tried multiple applications that are known for their ability to deal with huge files. These are the applications we tried:
logExpert (a nice log-viewer for windows)
Sublime (fast native editor for macOS)
bare Vim
BBEdit (very fast native editor for macOS)
glogg (awesome logging tool)
chipmunk
Tests were conducted on a powerful MacBook Pro (2.3GHz 8-Core) and with both the macOS version of chipmunk and the Windows version running in a virtual machine.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://esrlabs.github.io/chipmunk-docs/images/performance.png&quot; alt=&quot;Performance&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Another important use-case is, of course, executing searches across the whole content. The search in &lt;code class=&quot;highlighter-rouge&quot;&gt;logExpert&lt;/code&gt; took more than 4 minutes and the results were thus excluded.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://esrlabs.github.io/chipmunk-docs/images/search_performance.png&quot; alt=&quot;Performance&quot; /&gt;&lt;/p&gt;

&lt;p&gt;While chipmunks’ performance is good it is necessary to point out that we assume the target audience (developers, sysadmins, analysts) have access to fast hardware with SSD drives. We haven’t tested chipmunk on old hardware with HDD drives but we expect that our performance will be worse here since we make extensive use of the underlying disk system for any huge files.&lt;/p&gt;

&lt;p&gt;Photo by Hubert Neufeld on Unsplash&lt;/p&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil}</name></author><summary type="html">With well-performing desktop and notebook computers, it should no longer be an issue to quickly work with large log files. But unfortunately, this is not as straight forward as you might think. Especially when working with windows, the out-of-the-box tools just do not cut it.</summary></entry></feed>